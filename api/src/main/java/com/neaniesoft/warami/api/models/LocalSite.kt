/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.neaniesoft.warami.api.models

import com.neaniesoft.warami.api.models.ListingType
import com.neaniesoft.warami.api.models.RegistrationMode

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param siteId 
 * @param siteSetup 
 * @param enableDownvotes 
 * @param enableNsfw 
 * @param communityCreationAdminOnly 
 * @param requireEmailVerification 
 * @param privateInstance 
 * @param defaultTheme 
 * @param defaultPostListingType 
 * @param hideModlogModNames 
 * @param applicationEmailAdmins 
 * @param actorNameMaxLength 
 * @param federationEnabled 
 * @param captchaEnabled 
 * @param captchaDifficulty 
 * @param published 
 * @param registrationMode 
 * @param reportsEmailAdmins 
 * @param applicationQuestion 
 * @param legalInformation 
 * @param slurFilterRegex 
 * @param updated 
 */
@JsonClass(generateAdapter = true)

data class LocalSite (

    @Json(name = "id")
    val id: java.math.BigDecimal,

    @Json(name = "site_id")
    val siteId: java.math.BigDecimal,

    @Json(name = "site_setup")
    val siteSetup: kotlin.Boolean,

    @Json(name = "enable_downvotes")
    val enableDownvotes: kotlin.Boolean,

    @Json(name = "enable_nsfw")
    val enableNsfw: kotlin.Boolean,

    @Json(name = "community_creation_admin_only")
    val communityCreationAdminOnly: kotlin.Boolean,

    @Json(name = "require_email_verification")
    val requireEmailVerification: kotlin.Boolean,

    @Json(name = "private_instance")
    val privateInstance: kotlin.Boolean,

    @Json(name = "default_theme")
    val defaultTheme: kotlin.String,

    @Json(name = "default_post_listing_type")
    val defaultPostListingType: ListingType,

    @Json(name = "hide_modlog_mod_names")
    val hideModlogModNames: kotlin.Boolean,

    @Json(name = "application_email_admins")
    val applicationEmailAdmins: kotlin.Boolean,

    @Json(name = "actor_name_max_length")
    val actorNameMaxLength: java.math.BigDecimal,

    @Json(name = "federation_enabled")
    val federationEnabled: kotlin.Boolean,

    @Json(name = "captcha_enabled")
    val captchaEnabled: kotlin.Boolean,

    @Json(name = "captcha_difficulty")
    val captchaDifficulty: kotlin.String,

    @Json(name = "published")
    val published: kotlin.String,

    @Json(name = "registration_mode")
    val registrationMode: RegistrationMode,

    @Json(name = "reports_email_admins")
    val reportsEmailAdmins: kotlin.Boolean,

    @Json(name = "application_question")
    val applicationQuestion: kotlin.String? = null,

    @Json(name = "legal_information")
    val legalInformation: kotlin.String? = null,

    @Json(name = "slur_filter_regex")
    val slurFilterRegex: kotlin.String? = null,

    @Json(name = "updated")
    val updated: kotlin.String? = null

)

