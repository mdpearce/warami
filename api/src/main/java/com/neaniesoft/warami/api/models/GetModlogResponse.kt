/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.neaniesoft.warami.api.models

import com.neaniesoft.warami.api.models.AdminPurgeCommentView
import com.neaniesoft.warami.api.models.AdminPurgeCommunityView
import com.neaniesoft.warami.api.models.AdminPurgePersonView
import com.neaniesoft.warami.api.models.AdminPurgePostView
import com.neaniesoft.warami.api.models.ModAddCommunityView
import com.neaniesoft.warami.api.models.ModAddView
import com.neaniesoft.warami.api.models.ModBanFromCommunityView
import com.neaniesoft.warami.api.models.ModBanView
import com.neaniesoft.warami.api.models.ModFeaturePostView
import com.neaniesoft.warami.api.models.ModHideCommunityView
import com.neaniesoft.warami.api.models.ModLockPostView
import com.neaniesoft.warami.api.models.ModRemoveCommentView
import com.neaniesoft.warami.api.models.ModRemoveCommunityView
import com.neaniesoft.warami.api.models.ModRemovePostView
import com.neaniesoft.warami.api.models.ModTransferCommunityView

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param removedPosts 
 * @param lockedPosts 
 * @param featuredPosts 
 * @param removedComments 
 * @param removedCommunities 
 * @param bannedFromCommunity 
 * @param banned 
 * @param addedToCommunity 
 * @param transferredToCommunity 
 * @param added 
 * @param adminPurgedPersons 
 * @param adminPurgedCommunities 
 * @param adminPurgedPosts 
 * @param adminPurgedComments 
 * @param hiddenCommunities 
 */
@JsonClass(generateAdapter = true)

data class GetModlogResponse (

    @Json(name = "removed_posts")
    val removedPosts: kotlin.collections.List<ModRemovePostView>,

    @Json(name = "locked_posts")
    val lockedPosts: kotlin.collections.List<ModLockPostView>,

    @Json(name = "featured_posts")
    val featuredPosts: kotlin.collections.List<ModFeaturePostView>,

    @Json(name = "removed_comments")
    val removedComments: kotlin.collections.List<ModRemoveCommentView>,

    @Json(name = "removed_communities")
    val removedCommunities: kotlin.collections.List<ModRemoveCommunityView>,

    @Json(name = "banned_from_community")
    val bannedFromCommunity: kotlin.collections.List<ModBanFromCommunityView>,

    @Json(name = "banned")
    val banned: kotlin.collections.List<ModBanView>,

    @Json(name = "added_to_community")
    val addedToCommunity: kotlin.collections.List<ModAddCommunityView>,

    @Json(name = "transferred_to_community")
    val transferredToCommunity: kotlin.collections.List<ModTransferCommunityView>,

    @Json(name = "added")
    val added: kotlin.collections.List<ModAddView>,

    @Json(name = "admin_purged_persons")
    val adminPurgedPersons: kotlin.collections.List<AdminPurgePersonView>,

    @Json(name = "admin_purged_communities")
    val adminPurgedCommunities: kotlin.collections.List<AdminPurgeCommunityView>,

    @Json(name = "admin_purged_posts")
    val adminPurgedPosts: kotlin.collections.List<AdminPurgePostView>,

    @Json(name = "admin_purged_comments")
    val adminPurgedComments: kotlin.collections.List<AdminPurgeCommentView>,

    @Json(name = "hidden_communities")
    val hiddenCommunities: kotlin.collections.List<ModHideCommunityView>

)

