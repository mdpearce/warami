/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.neaniesoft.warami.api.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param auth 
 * @param name 
 * @param sidebar 
 * @param description 
 * @param icon 
 * @param banner 
 * @param applicationQuestion 
 * @param defaultTheme 
 * @param legalInformation 
 * @param discussionLanguages 
 * @param slurFilterRegex 
 * @param actorNameMaxLength 
 * @param rateLimitMessage 
 * @param rateLimitMessagePerSecond 
 * @param rateLimitPost 
 * @param rateLimitPostPerSecond 
 * @param rateLimitRegister 
 * @param rateLimitRegisterPerSecond 
 * @param rateLimitImage 
 * @param rateLimitImagePerSecond 
 * @param rateLimitComment 
 * @param rateLimitCommentPerSecond 
 * @param rateLimitSearch 
 * @param rateLimitSearchPerSecond 
 * @param captchaDifficulty 
 * @param allowedInstances 
 * @param blockedInstances 
 * @param taglines 
 */
@JsonClass(generateAdapter = true)

data class EditSite (

    @Json(name = "auth")
    val auth: kotlin.String,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "sidebar")
    val sidebar: kotlin.String? = null,

    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "icon")
    val icon: kotlin.String? = null,

    @Json(name = "banner")
    val banner: kotlin.String? = null,

    @Json(name = "application_question")
    val applicationQuestion: kotlin.String? = null,

    @Json(name = "default_theme")
    val defaultTheme: kotlin.String? = null,

    @Json(name = "legal_information")
    val legalInformation: kotlin.String? = null,

    @Json(name = "discussion_languages")
    val discussionLanguages: kotlin.collections.List<java.math.BigDecimal>? = null,

    @Json(name = "slur_filter_regex")
    val slurFilterRegex: kotlin.String? = null,

    @Json(name = "actor_name_max_length")
    val actorNameMaxLength: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_message")
    val rateLimitMessage: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_message_per_second")
    val rateLimitMessagePerSecond: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_post")
    val rateLimitPost: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_post_per_second")
    val rateLimitPostPerSecond: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_register")
    val rateLimitRegister: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_register_per_second")
    val rateLimitRegisterPerSecond: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_image")
    val rateLimitImage: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_image_per_second")
    val rateLimitImagePerSecond: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_comment")
    val rateLimitComment: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_comment_per_second")
    val rateLimitCommentPerSecond: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_search")
    val rateLimitSearch: java.math.BigDecimal? = null,

    @Json(name = "rate_limit_search_per_second")
    val rateLimitSearchPerSecond: java.math.BigDecimal? = null,

    @Json(name = "captcha_difficulty")
    val captchaDifficulty: kotlin.String? = null,

    @Json(name = "allowed_instances")
    val allowedInstances: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "blocked_instances")
    val blockedInstances: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "taglines")
    val taglines: kotlin.collections.List<kotlin.String>? = null

)

